var searchData=
[
  ['halleyrootfindercore',['HalleyRootFinderCore',['../d0/d48/classtudat_1_1root__finders_1_1_halley_root_finder_core.html#a699852e1e5066afc555d5dc4e4e0f43e',1,'tudat::root_finders::HalleyRootFinderCore::HalleyRootFinderCore(TerminationFunction terminationFunction)'],['../d0/d48/classtudat_1_1root__finders_1_1_halley_root_finder_core.html#a5abe46bfab9183bdafe48b9519e6f88f',1,'tudat::root_finders::HalleyRootFinderCore::HalleyRootFinderCore(const DataType relativeXTolerance, const unsigned int maxIterations)']]],
  ['handleunimplementedenumvalue',['handleUnimplementedEnumValue',['../d8/d24/namespacetudat_1_1json__interface.html#ad66b734e4a05cd2af739ecdb12b3fafa',1,'tudat::json_interface']]],
  ['handleuseofdefaultvalue',['handleUseOfDefaultValue',['../dc/d36/classtudat_1_1json__interface_1_1_undefined_key_error.html#a85d24fc22955403b49b79a6dbeeeab1c',1,'tudat::json_interface::UndefinedKeyError']]],
  ['hash_5fconstructor',['hash_constructor',['../d3/dc2/namespacetudat_1_1input__output_1_1field__types.html#ac38ef97c6c25573e009ab73ed7e054dd',1,'tudat::input_output::field_types']]],
  ['hashfunc',['hashFunc',['../d5/d1b/classtudat_1_1aerodynamics_1_1_n_r_l_m_s_i_s_e00_atmosphere.html#ac13dcc930e184a5c9bc173f2a60da5de',1,'tudat::aerodynamics::NRLMSISE00Atmosphere']]],
  ['hermitecubicsplineinterpolator',['HermiteCubicSplineInterpolator',['../d8/d88/classtudat_1_1interpolators_1_1_hermite_cubic_spline_interpolator.html#a231d2f1479003eade4ca1f66bbd83b7d',1,'tudat::interpolators::HermiteCubicSplineInterpolator::HermiteCubicSplineInterpolator(const std::vector&lt; IndependentVariableType &gt; &amp;independentValues, const std::vector&lt; DependentVariableType &gt; &amp;dependentValues, const std::vector&lt; DependentVariableType &gt; &amp;derivativeValues, const AvailableLookupScheme selectedLookupScheme=huntingAlgorithm, const BoundaryInterpolationType boundaryHandling=extrapolate_at_boundary, const std::pair&lt; DependentVariableType, DependentVariableType &gt; &amp;defaultExtrapolationValue=std::make_pair(IdentityElement::getAdditionIdentity&lt; DependentVariableType &gt;(), IdentityElement::getAdditionIdentity&lt; DependentVariableType &gt;()))'],['../d8/d88/classtudat_1_1interpolators_1_1_hermite_cubic_spline_interpolator.html#ab61fc3bdbd0c50e828a1eaba2a91e874',1,'tudat::interpolators::HermiteCubicSplineInterpolator::HermiteCubicSplineInterpolator(const std::map&lt; IndependentVariableType, DependentVariableType &gt; &amp;dataMap, const std::vector&lt; DependentVariableType &gt; &amp;derivativeValues, const AvailableLookupScheme selectedLookupScheme=huntingAlgorithm, const BoundaryInterpolationType boundaryHandling=extrapolate_at_boundary, const std::pair&lt; DependentVariableType, DependentVariableType &gt; &amp;defaultExtrapolationValue=std::make_pair(IdentityElement::getAdditionIdentity&lt; DependentVariableType &gt;(), IdentityElement::getAdditionIdentity&lt; DependentVariableType &gt;()))']]],
  ['hermitedatasettings',['HermiteDataSettings',['../dd/d93/classtudat_1_1interpolators_1_1_hermite_data_settings.html#ac88f1895a1d615f402b052fa49ff5bf6',1,'tudat::interpolators::HermiteDataSettings']]],
  ['hodographicshaping',['HodographicShaping',['../da/d6a/classtudat_1_1shape__based__methods_1_1_hodographic_shaping.html#a6af0bdef03078fbddf083ffc939eaa85',1,'tudat::shape_based_methods::HodographicShaping']]],
  ['hodographicshapinglegsettings',['HodographicShapingLegSettings',['../d4/d7e/classtudat_1_1low__thrust__trajectories_1_1_hodographic_shaping_leg_settings.html#a0250b118c63ec7665f324dafae384404',1,'tudat::low_thrust_trajectories::HodographicShapingLegSettings']]],
  ['hodographicshapingoptimisationproblem',['HodographicShapingOptimisationProblem',['../d9/d48/structtudat_1_1shape__based__methods_1_1_hodographic_shaping_optimisation_problem.html#ad78f871a0ab176e7bef89addc3dfe947',1,'tudat::shape_based_methods::HodographicShapingOptimisationProblem::HodographicShapingOptimisationProblem()'],['../d9/d48/structtudat_1_1shape__based__methods_1_1_hodographic_shaping_optimisation_problem.html#ab003dbdadfce89d3cc81bd85813eb4e6',1,'tudat::shape_based_methods::HodographicShapingOptimisationProblem::HodographicShapingOptimisationProblem(const std::function&lt; Eigen::Vector6d(const double) &gt; &amp;initialStateFunction, const std::function&lt; Eigen::Vector6d(const double) &gt; &amp;finalStateFunction, const double centralBodyGravitationalParameter, const int numberOfRevolutions, const std::function&lt; std::vector&lt; BaseFunctionVector &gt;(const double) &gt; basisFunctionsFunction, const std::vector&lt; std::vector&lt; double &gt; &gt; &amp;freeCoefficientsBounds, const bool minimizeMaximumThrust=false, const double initialMass=TUDAT_NAN)']]],
  ['huntingalgorithmlookupscheme',['HuntingAlgorithmLookupScheme',['../d7/dde/classtudat_1_1interpolators_1_1_hunting_algorithm_lookup_scheme.html#a3fb7eafeb1f8b9056632e9ccca263da4',1,'tudat::interpolators::HuntingAlgorithmLookupScheme']]],
  ['hybridarccombinedstatetransitionandsensitivitymatrixinterface',['HybridArcCombinedStateTransitionAndSensitivityMatrixInterface',['../db/dc4/classtudat_1_1propagators_1_1_hybrid_arc_combined_state_transition_and_sensitivity_matrix_interface.html#a0672bd56cdff47197650f7f0d4748367',1,'tudat::propagators::HybridArcCombinedStateTransitionAndSensitivityMatrixInterface']]],
  ['hybridarcdynamicssimulator',['HybridArcDynamicsSimulator',['../d6/d68/classtudat_1_1propagators_1_1_hybrid_arc_dynamics_simulator.html#a2fa66b26b7f0a4a6c76cd19a9a16d1a5',1,'tudat::propagators::HybridArcDynamicsSimulator::HybridArcDynamicsSimulator(const simulation_setup::NamedBodyMap &amp;bodyMap, const std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; TimeType &gt; &gt; integratorSettings, const std::shared_ptr&lt; PropagatorSettings&lt; StateScalarType &gt; &gt; propagatorSettings, const std::vector&lt; double &gt; arcStartTimes, const bool areEquationsOfMotionToBeIntegrated=true, const bool clearNumericalSolutions=true, const bool setIntegratedResult=true, const bool addSingleArcBodiesToMultiArcDynamics=false)'],['../d6/d68/classtudat_1_1propagators_1_1_hybrid_arc_dynamics_simulator.html#a6b8021e4864c77bbb9ee9897ede59966',1,'tudat::propagators::HybridArcDynamicsSimulator::HybridArcDynamicsSimulator(const simulation_setup::NamedBodyMap &amp;bodyMap, const std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; TimeType &gt; &gt; singleArcIntegratorSettings, const std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; TimeType &gt; &gt; multiArcIntegratorSettings, const std::shared_ptr&lt; PropagatorSettings&lt; StateScalarType &gt; &gt; propagatorSettings, const std::vector&lt; double &gt; arcStartTimes, const bool areEquationsOfMotionToBeIntegrated=true, const bool clearNumericalSolutions=true, const bool setIntegratedResult=true, const bool addSingleArcBodiesToMultiArcDynamics=false)']]],
  ['hybridarcpropagatorsettings',['HybridArcPropagatorSettings',['../de/d1d/classtudat_1_1propagators_1_1_hybrid_arc_propagator_settings.html#a1b86faa293f93b469c3228f9336e9433',1,'tudat::propagators::HybridArcPropagatorSettings']]],
  ['hybridarcvariationalequationssolver',['HybridArcVariationalEquationsSolver',['../d8/de2/classtudat_1_1propagators_1_1_hybrid_arc_variational_equations_solver.html#ab68839706e9403fe21fa44710d843a7f',1,'tudat::propagators::HybridArcVariationalEquationsSolver::HybridArcVariationalEquationsSolver(const simulation_setup::NamedBodyMap &amp;bodyMap, const std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; TimeType &gt; &gt; integratorSettings, const std::shared_ptr&lt; PropagatorSettings&lt; StateScalarType &gt; &gt; propagatorSettings, const std::shared_ptr&lt; estimatable_parameters::EstimatableParameterSet&lt; StateScalarType &gt; &gt; parametersToEstimate, const std::vector&lt; double &gt; arcStartTimes, const bool integrateDynamicalAndVariationalEquationsConcurrently=true, const bool clearNumericalSolution=true, const bool integrateEquationsOnCreation=false)'],['../d8/de2/classtudat_1_1propagators_1_1_hybrid_arc_variational_equations_solver.html#aac2b9c1c83e66cbb5bd15890eeee795c',1,'tudat::propagators::HybridArcVariationalEquationsSolver::HybridArcVariationalEquationsSolver(const simulation_setup::NamedBodyMap &amp;bodyMap, const std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; TimeType &gt; &gt; singleArcIntegratorSettings, const std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; TimeType &gt; &gt; multiArcIntegratorSettings, const std::shared_ptr&lt; PropagatorSettings&lt; StateScalarType &gt; &gt; propagatorSettings, const std::shared_ptr&lt; estimatable_parameters::EstimatableParameterSet&lt; StateScalarType &gt; &gt; parametersToEstimate, const std::vector&lt; double &gt; arcStartTimes, const bool integrateDynamicalAndVariationalEquationsConcurrently=true, const bool clearNumericalSolution=true, const bool integrateEquationsOnCreation=false)']]],
  ['hybridmethod',['HybridMethod',['../d4/d5c/classtudat_1_1low__thrust__trajectories_1_1_hybrid_method.html#af90b542f9651d0a608f355c3adcd8a0d',1,'tudat::low_thrust_trajectories::HybridMethod']]],
  ['hybridmethodmodel',['HybridMethodModel',['../d8/dcc/classtudat_1_1low__thrust__trajectories_1_1_hybrid_method_model.html#ab7c136496e6fae4e26933166c768903e',1,'tudat::low_thrust_trajectories::HybridMethodModel']]],
  ['hybridmethodproblem',['HybridMethodProblem',['../d3/d70/structtudat_1_1low__thrust__trajectories_1_1_hybrid_method_problem.html#afe06191119f4d8899d8c412a10f77437',1,'tudat::low_thrust_trajectories::HybridMethodProblem::HybridMethodProblem()'],['../d3/d70/structtudat_1_1low__thrust__trajectories_1_1_hybrid_method_problem.html#ad4e317086e3bd2f07701ee7a8cad9f00',1,'tudat::low_thrust_trajectories::HybridMethodProblem::HybridMethodProblem(const Eigen::Vector6d &amp;stateAtDeparture, const Eigen::Vector6d &amp;stateAtArrival, const double maximumThrust, const double specificImpulse, const double timeOfFlight, simulation_setup::NamedBodyMap bodyMap, const std::string bodyToPropagate, const std::string centralBody, std::shared_ptr&lt; numerical_integrators::IntegratorSettings&lt; double &gt; &gt; integratorSettings, const std::pair&lt; std::vector&lt; double &gt;, double &gt; initialGuessThrustModel, const std::pair&lt; double, double &gt; initialAndFinalMEEcostatesBounds=std::make_pair(- 10.0, 10.0), const double relativeToleranceConstraints=1.0e-6)']]],
  ['hybridpropagationterminationcondition',['HybridPropagationTerminationCondition',['../da/d57/classtudat_1_1propagators_1_1_hybrid_propagation_termination_condition.html#a44c5272b512c8e20462068eca871c410',1,'tudat::propagators::HybridPropagationTerminationCondition']]],
  ['hypersoniclocalinclinationanalysis',['HypersonicLocalInclinationAnalysis',['../d7/dc6/classtudat_1_1aerodynamics_1_1_hypersonic_local_inclination_analysis.html#a36a22df8e7e04bf42bdd8650dfacb6ec',1,'tudat::aerodynamics::HypersonicLocalInclinationAnalysis']]]
];
